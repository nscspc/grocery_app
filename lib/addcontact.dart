import 'package:flutter/material.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:grocery/user.dart';
import 'dart:io';
import 'package:image_picker/image_picker.dart';
// import '../model/contact.dart';
// import 'package:firebase_storage/firebase_storage.dart';
import 'package:path/path.dart'; // to get the arbitrary path where ever the image is present.

class addcontact extends StatefulWidget {
  @override
  State<addcontact> createState() => _addcontactState();
}

class _addcontactState extends State<addcontact> {
  DatabaseReference _databaseReference = FirebaseDatabase.instance.reference();
  String _firstName = '';
  String _lastName = '';
  String _phone = '';
  String _email = '';
  String _address = '';
  // String _photoUrl = 'empty';

  saveContact(BuildContext context) async {
    if (_firstName.isNotEmpty &&
        _lastName.isNotEmpty &&
        _phone.isNotEmpty &&
        _email.isNotEmpty &&
        _address.isNotEmpty) {
      contact ContactObj = contact(this._firstName, this._lastName, this._phone,
          this._email, this._address);

      await _databaseReference.push().set(ContactObj.toJson());
      // push() :-
      /*
      => Generates a new child location using a unique key 
         and returns a DatabaseReference to it. This is
         useful when the children of a Firebase Database 
         location represent a list of items.
      => The unique key generated by childByAutoId: is 
         prefixed with a client-generated timestamp so 
         that the resulting list will be 
         chronologically-sorted.
      */

      // set() :-
      /*
      => Write value to the location with the specified 
        priority if applicable.
      => This will overwrite any data at this location and
         all child locations.
      => Data types that are allowed are String, boolean, 
          int, double, Map, List.
      => The effect of the write will be visible immediately 
          and the corresponding events will be triggered. Synchronization of the data to the Firebase Database servers will also be started.
      => Passing null for the new value means all data at 
          this location or any child location will be deleted.
      */
      navigateToLastScreen(context);
    } else {
      showDialog(
          context: context,
          builder: (context) {
            return AlertDialog(
              title: Text("Field Required"),
              content: Text("All fields are required"),
              actions: [
                FlatButton(
                  child: Text("Close"),
                  onPressed: () {
                    Navigator.of(context).pop();
                  },
                ),
              ],
            );
          });
    }
  }

  // Future pickImage() async {
  //   File file = await ImagePicker.pickImage(
  //       source: ImageSource.gallery, maxHeight: 200.0, maxWidth: 200.0);
  //   String filename = basename(file.path);
  //   uploadImage(file, filename);
  // }
  // // basename() :-
  // /*
  // => String basename(String path)
  // => Type: String Function(String) package:path/path.dart
  // => Gets the part of [path] after the last separator.
  //   -> p.basename('path/to/foo.dart'); // -> 'foo.dart'
  //   -> p.basename('path/to');          // -> 'to'
  //   -> Trailing separators are ignored.
  //     -> p.basename('path/to/'); // -> 'to'
  // */

  // void uploadImage(File file, String filename) async {
  //   StorageReference _storageReference =
  //       FirebaseStorage.instance.ref().child(filename);
  //   _storageReference.putFile(file).onComplete.then((firebaseFile) async {
  //     // here we have fired up a callback asynchronoulsy.
  //     var downloadUrl = await firebaseFile.ref.getDownloadURL();
  //     setState(() {
  //       _photoUrl = downloadUrl;
  //     });
  //   });
  // }

  navigateToLastScreen(context) {
    Navigator.of(context).pop();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Contact'),
      ),
      body: Container(
        child: Padding(
          padding: EdgeInsets.all(20.0),
          child: ListView(
            // it also facilitates the scrolling as well.
            children: [
              // Container(
              //   margin: EdgeInsets.only(top: 20.0),
              //   child: GestureDetector(
              //     onTap: () {
              //       this.pickImage();
              //     },
              //     child: Center(
              //       child: Container(
              //         width: 100.0,
              //         height: 100.0,
              //         decoration: BoxDecoration(
              //           shape: BoxShape.circle,
              //           image: DecorationImage(
              //             fit: BoxFit.cover,
              //             // image: _photoUrl == "empty" ? const AssetImage("assets/logo.png") :Image.network(NetworkImage(_photoUrl)),
              //             image: _photoUrl == "empty"
              //                 ? AssetImage("assets/logo.png") as ImageProvider
              //                 : NetworkImage(_photoUrl),
              //           ),
              //         ),
              //       ),
              //     ),
              //   ),
              // ),
              // FirstName :-
              Container(
                margin: EdgeInsets.only(top: 20.0),
                child: TextField(
                  onChanged: (value) {
                    setState(() {
                      _firstName = value;
                    });
                  },
                  decoration: InputDecoration(
                    labelText: 'First Name',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                ),
              ),
              // LastName :-
              Container(
                margin: EdgeInsets.only(top: 20.0),
                child: TextField(
                  onChanged: (value) {
                    setState(() {
                      _lastName = value;
                    });
                  },
                  decoration: InputDecoration(
                    labelText: 'Last Name',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                ),
              ),
              // phone :-
              Container(
                margin: EdgeInsets.only(top: 20.0),
                child: TextField(
                  onChanged: (value) {
                    setState(() {
                      _phone = value;
                    });
                  },
                  decoration: InputDecoration(
                    labelText: 'Phone',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                ),
              ),
              // email :-
              Container(
                margin: EdgeInsets.only(top: 20.0),
                child: TextField(
                  onChanged: (value) {
                    setState(() {
                      _email = value;
                    });
                  },
                  decoration: InputDecoration(
                    labelText: 'Email',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                ),
              ),
              // address :-
              Container(
                margin: EdgeInsets.only(top: 20.0),
                child: TextField(
                  onChanged: (value) {
                    setState(() {
                      _address = value;
                    });
                  },
                  decoration: InputDecoration(
                    labelText: 'Address',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(5.0),
                    ),
                  ),
                ),
              ),
              Container(
                padding: EdgeInsets.only(top: 20.0),
                child: RaisedButton(
                  padding: EdgeInsets.fromLTRB(100, 20, 100, 20),
                  onPressed: () {
                    saveContact(context);
                  },
                  color: Colors.red,
                  child: Text(
                    "Save",
                    style: TextStyle(
                      fontSize: 20.0,
                      color: Colors.white,
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
